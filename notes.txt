    addToChat([
        {
            user,
            type: "text",
            data: {
                text: btnData.text,
            },
            chatId: getChatId(),
        },
    ])

    // adding user message to chat
    addToChat([
        cloneMessage({
            type: "text",
            data: {
                text: "View Solution",
            },
            user,
            chatId: getChatId(),
        })
    ])



    // triggering api call
    replyToChat({
        eventId: event_id,
        input: btnData.id,
        moduleId: module_id,
        ...(btnData.paginated
            ? {
                page_number: btnData.next_page_number,
                page_size: btnData.page_size,
            }
            : {}),
        navigate,
    })



    dispatch(updateChat({
         ...newChat, data: newData, type: "text" 
    }))




learn bot:

- if user lands on learn bot from master bot then
  - initiate Hi
- if user lands on learn bot with query string q={query}
  - initiate bot with query
- type a topic and watch video
- while watching video user will get recommendations

practice bot:

- if user lands on learn bot from master bot then
  - initiate Hi
- if user lands on learn bot with query string q={query}
  - initiate bot with query
- type a topic and start attempting practice Questions with below question types
 -  "SingleChoice",
 -  "MultipleChoice",
 -  "MatrixMatchSingleChoice",
 -  "TrueFalse",
 -  "Assertion",
 -  "LinkedComprehension",
 -  "Integer",
 -  "SubjectiveAnswer",
 -  "SubjectiveNumerical",

 -  "FillInTheBlanks",
 -  "MultipleFillInTheBlanks",

 -  "SingleDropDown",
 -  "MultipleDropDown",
- on press back show summary or if practice questions for that topic ends show summary

doubt bot:

- if user lands on learn bot from master bot then
  - initiate Hi
- type a topic and it will give one of these:
  - practice questions with below question types:
    -  "SingleChoice",
    -  "MultipleChoice",
    -  "MatrixMatchSingleChoice",
    -  "TrueFalse",
    -  "Assertion",
    -  "LinkedComprehension",
    -  "Integer",
    -  "SubjectiveAnswer",
    -  "SubjectiveNumerical",

    -  "FillInTheBlanks",
    -  "MultipleFillInTheBlanks",

    -  "SingleDropDown",
    -  "MultipleDropDown",
  - videos
  - (practice questions or videos) might come in same response
  - preview document related to that topic (independent response)


new requirements: 

- handle deeplink 